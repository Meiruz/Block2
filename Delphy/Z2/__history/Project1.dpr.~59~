Program Project1;

{$APPTYPE CONSOLE}
{$R *.res}

Uses
    System.SysUtils;

Type
    TError = (FailData, FailLimitOfData);
    TArray = Array Of Integer;

Const
    ERRORS: Array [0 .. 1] Of String =
        ('Некорректные данные. Попробуйте еще раз. ',
        'Ваше значение не соответствует числовым ограничениям. Попробуйте еще раз. ');
    MIN_LIMIT = 1;
    MAX_LIMIT = 2000000000;

Procedure InWithChecking(Var Value: Integer);
Var
    IsGood: Boolean;
Begin
    IsGood := True;

    Try
        Readln(Value);
    Except
        IsGood := False;
        Write(ERRORS[Ord(FailData)]);
        InWithChecking(Value);
    End;

    If IsGood And ((Value > MAX_LIMIT) Or (Value < MIN_LIMIT)) Then
    Begin
        Write(ERRORS[Ord(FailLimitOfData)]);
        InWithChecking(Value);
    End;
End;

Function GetNumLength(Num: Integer): Integer;
Var
    Length: Integer;
Begin
    Length := 0;

    If Num = 0 Then
        GetNumLength := 1;

    While Num > 0 Do
    Begin
        Num := Num Div 10;
        Inc(Length);
    End;

    GetNumLength := Length;
End;

Procedure SplitNumToArray(Num, NumLength: Integer; Var ArrNum: TArray);
Begin
    While Num > 0 Do
    Begin
        Dec(NumLength);
        ArrNum[NumLength] := Num Mod 10;
        Num := Num Div 10;
    End;
End;

Procedure OutElement(Element: Char; Count: Integer;
    IsStartEndl, IsEndEndl: Boolean);
Var
    I: Integer;
Begin
    If IsStartEndl Then
        Writeln;

    For I := 1 To Count Do
        Write(Element);

    If IsEndEndl Then
        Writeln;
End;

Procedure DivisonOfElements(Var ArrFirstNum: TArray;
    FirstNum, SecondNum, FirstNumLength: Integer);
Var
    Pos, UnderlinedNum, AddUnderlinedRange, UnderlinedNumLength,
        CheckPos: Integer;
    divisionAns, roundDivision, divisionPos, newUnderlinedRange: integer;
    IsNotFirst: Boolean;
Begin
    Pos := 0;
    UnderlinedNum := 0;
    AddUnderlinedRange := 1;
    UnderlinedNumLength := 0;
    IsNotFirst := False;

    for var I := 0 to FirstNumLength do
        write(ArrFirstNum[i]);
    writeln;

    Writeln(#10#13, FirstNum, ' | ', SecondNum);
    While CheckPos < 0 Do
    Begin
        CheckPos := Pos + AddUnderlinedRange - 1;
        While (CheckPos < FirstNumLength) And (UnderlinedNum < SecondNum) Do
        Begin
            UnderlinedNum := UnderlinedNum * 10 + ArrFirstNum[CheckPos];
            Inc(AddUnderlinedRange);
            Inc(CheckPos);
        End;
        Dec(CheckPos);
        Dec(AddUnderlinedRange);

        If IsNotFirst Then
        Begin
            OutElement(' ', Pos, false, false);
            OutElement('-', AddUnderlinedRange, False, True);
            OutElement(' ', Pos, false, false);
            Writeln(UnderlinedNum);
        End;

        divisionAns := underlinedNum div secondNum;
        roundDivision := divisionAns * secondNum;
        divisionPos := pos + (addUnderlinedRange - getNumLength(roundDivision));

        outElement(' ', divisionPos, false, false);
        write(roundDivision);

        if isNotFirst then
            writeln
        else
        begin
            outElement(' ', firstNumLength - addUnderlinedRange, false, false);
            writeln(' | ', firstNum div secondNum);
        end;


        dec(underlinedNum, roundDivision);

        newUnderlinedRange := getNumLength(underlinedNum);
        pos := pos + addUnderlinedRange - newUnderlinedRange;
        addUnderlinedRange := newUnderlinedRange + 1;

        if underlinedNum = 0 then
        begin
            inc(pos);
            dec(addUnderlinedRange);
        end;

        IsNotFirst := true;
    End;

    outElement(' ', pos, false, false);
    outElement('-', addUnderlinedRange - 1, false, true);
    outElement(' ', pos, false, false);

    writeln(underlinedNum, #10#13);

End;

Procedure ExitProgram();
Begin
    Writeln('Для выхода из программы нажмите Enter...');
    Readln;
End;

Var
    I, FirstNum, SecondNum: Integer;
    FirstNumLength: Integer;
    IsGood: Boolean;
    ArrNum: TArray;

Begin

    Writeln('Программа для деления чисел в столбик. ');

    Write(#10#13, 'Введите значение делимого от ', MIN_LIMIT, ' до ',
        MAX_LIMIT, ': ');
    InWithChecking(FirstNum);

    Write(#10#13, 'Введите значение делителя от ', MIN_LIMIT, ' до ',
        MAX_LIMIT, ': ');
    InWithChecking(SecondNum);

    FirstNumLength := GetNumLength(FirstNum);
    SetLength(ArrNum, FirstNumLength);
    SplitNumToArray(FirstNum, FirstNumLength, ArrNum);

    DivisonOfElements(ArrNum, FirstNum, SecondNum, FirstNumLength);

    ExitProgram();

End.
